//apply plugin: 'com.android.application'

apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.github.dcendents.android-maven'

group='com.github.ww7hcom'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 42

static int getVersionCode(versionMajor, versionMinor, versionPatch){
    return versionMajor*100+versionMinor*10+versionPatch
}

static String getVersionName(versionMajor, versionMinor, versionPatch){
    return versionMajor+"."+versionMinor+"."+versionPatch
}

android {
    compileSdkVersion 28
    defaultConfig {
//        applicationId "com.ww7h.ww.common"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode getVersionCode(versionMajor,versionMinor,versionPatch)
        versionName getVersionName(versionMajor,versionMinor,versionPatch)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    signingConfigs {
        debug {
            storeFile file("/Users/ww/Documents/AndroidProjects/WW7H.jks")
            storePassword "PASSWORD"
            keyAlias "common"
            keyPassword "password"
        }
        release {
            storeFile file("/Users/ww/Documents/AndroidProjects/WW7H.jks")
            storePassword "PASSWORD"
            keyAlias "common"
            keyPassword "password"
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all {
            def fileName = "ww_common_"+getVersionName(versionMajor,versionMinor,versionPatch)+".aar"
            outputFileName = fileName
        }
    }
}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test:runner:1.0.2') {
        exclude group: 'com.android.support'
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'org.apache.directory.studio:org.apache.commons.codec:1.8'
    implementation 'com.belerweb:pinyin4j:2.5.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.zhihu.android:matisse:0.5.1'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:retrofit-converters:2.6.2'
    implementation 'com.squareup.retrofit2:retrofit-adapters:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.retrofit2:converter-simplexml:2.6.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
}
